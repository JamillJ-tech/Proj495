using System;
using System.Collections.Generic;
using MySql.Data.MySqlClient;
namespace PhysioDynamik_Prototype_1
{
public class Patient
{
    public string Name { get; set; }
    public int PatientID { get; set; }
    public string Email { get; set; }
    public string PhoneNumber { get; set; }
    public DateTime DateOfBirth { get; set; }
    public List<Appointment> AppointmentList { get; set; }
    private List<string> PaymentMethods { get; set; }
    public MedicalRecord MedicalRecord { get; set; }
}

public class Therapist
{
    public int TherapistID { get; set; }
    public string Name { get; set; }
    public string Specialty { get; set; }
    public List<Appointment> AppointmentList { get; set; }
    public bool PaymentConfirmed { get; set; }
}

public class Appointment
{
    public int AppointmentID { get; set; }
    public DateTime Date { get; set; }
    public string Status { get; set; }
}

public class Homework
{
    public int HomeworkID { get; set; }
    public int ClientID { get; set; }
    public int TherapistID { get; set; }
    public DateTime DueDate { get; set; }
    public string SubmissionStatus { get; set; }
}

public class Resource
{
    public int ResourceID { get; set; }
    public int TherapistID { get; set; }
    public int ClientID { get; set; }
    public string ResourceType { get; set; }
    public DateTime DateGiven { get; set; }
}

public class Feedback
{
    public int FeedbackID { get; set; }
    public int HomeworkID { get; set; }
    public int TherapistID { get; set; }
    public int ClientID { get; set; }
    public DateTime DateGiven { get; set; }
}

public class RegistrationForm
{
    public int FormID { get; set; }
}

public class Receptionist
{
    public int ReceptionistID { get; set; }
    public string Name { get; set; }
    public bool PaymentVerified { get; set; }
}

public class PaymentGateway
{
    public int MethodType { get; set; }
    public string AccountNumber { get; set; }
    public string CardHolderName { get; set; }
    public DateTime ExpirationDate { get; set; }
}

public class Payment
{
    public int PaymentID { get; set; }
    public DateTime PaymentDate { get; set; }
    public decimal Amount { get; set; }
    public string Status { get; set; }
}

public class Manager
{
    private int ManagerID { get; set; }
    private string Name { get; set; }
    private string Email { get; set; }
    private string PhoneNumber { get; set; }

    // Method for manager to review the monthly performance report
    public void ReviewMonthlyPerformanceReport(DateTime reportDate)
    {
        PerformanceReport report = PerformanceReport.GetMonthlyPerformanceReport(reportDate);
        if (report != null)
        {
            report.DisplayReport();
            Notification.SendNotification("Manager", $"Performance report for {reportDate.ToString("MMMM yyyy")} has been reviewed.", "Info");

        }
        else
        {
            Console.WriteLine("No performance report found for the selected month.");
        }
    }
}

public class SystemClass
{
    public int SystemID { get; set; }
    public DatabaseHelper DatabaseHelper { get; set; }
    public int AvailableSlots { get; set; }

    // Constructor to initialize DatabaseHelper
    public SystemClass()
    {
        DatabaseHelper = new DatabaseHelper();
    }
}

public class Receipt
{
    private int ReceiptID { get; set; }
    private int PaymentID { get; set; }
    private int ClientID { get; set; }
    public decimal Amount { get; set; }
    public DateTime Date { get; set; }
}

public class PerformanceReport
{
    public int ReportID { get; set; }
    public DateTime Date { get; set; }
    public string Metrics { get; set; }
    // Method to fetch monthly performance report from MySQL database
    public static PerformanceReport GetMonthlyPerformanceReport(DateTime reportDate)
    {
        PerformanceReport report = null;
        DatabaseHelper dbHelper = new DatabaseHelper();

        using (var connection = dbHelper.GetConnection())
        {
            try
            {
                connection.Open();
                string query = "SELECT * FROM PerformanceReport WHERE MONTH(Date) = @Month AND YEAR(Date) = @Year";
                using (MySqlCommand cmd = new MySqlCommand(query, connection))
                {
                    cmd.Parameters.AddWithValue("@Month", reportDate.Month);
                    cmd.Parameters.AddWithValue("@Year", reportDate.Year);
                    using (MySqlDataReader reader = cmd.ExecuteReader())
                    {
                        if (reader.Read())
                        {
                            report = new PerformanceReport
                            {
                                ReportID = reader.GetInt32("ReportID"),
                                Date = reader.GetDateTime("Date"),
                                Metrics = reader.GetString("Metrics")
                            };
                        }
                    }
                }
            }
            catch (MySqlException ex)
            {
                Console.WriteLine($"Database error: {ex.Message}");
            }
        }

        return report;
    }

    // Method to display the performance report
    public void DisplayReport()
    {
        Console.WriteLine("Performance Report:");
        Console.WriteLine($"Report ID: {ReportID}");
        Console.WriteLine($"Date: {Date.ToShortDateString()}");
        Console.WriteLine($"Metrics: {Metrics}");
    }
}

public class Notification 
{
    private int NotificationID { get; set; }
    private string Content { get; set; } 
    public string Recipient { get; set; }
    public string Type { get; set; }
    public string Message { get; set; }

    // Method to send notification
    public static void SendNotification(string recipient, string message, string type)
    {
        DatabaseHelper dbHelper = new DatabaseHelper();

        using (var connection = dbHelper.GetConnection())
        {
            try
            {
                connection.Open();
                string query = "INSERT INTO Notification (Recipient, Message, Type, Content) VALUES (@Recipient, @Message, @Type, @Content)";
                using (MySqlCommand cmd = new MySqlCommand(query, connection))
                {
                    cmd.Parameters.AddWithValue("@Recipient", recipient);
                    cmd.Parameters.AddWithValue("@Message", message);
                    cmd.Parameters.AddWithValue("@Type", type);
                    cmd.Parameters.AddWithValue("@Content", message);  // In this case, Content and Message are the same
                    cmd.ExecuteNonQuery();
                }

                Console.WriteLine($"Notification sent to {recipient}: {message}");
            }
            catch (MySqlException ex)
            {
                Console.WriteLine($"Database error: {ex.Message}");
            }
        }
    }
}

public class StaffSchedule
{
    public int ScheduleID { get; set; }
    public DateTime StartDate { get; set; }
    public DateTime EndDate { get; set; }
    public string AvailableSlots { get; set; }
}

public class Document
{
    public int DocumentID { get; set; } 
    public string FileType { get; set; } 
    public DateTime UploadDate { get; set; }
}

public class MedicalRecord
{
    public int PatientID { get; set; }
    public string Report { get; set; }
    public List<DateTime> TreatmentHistory { get; set; }
}

public class Assessment
{
    private int ClientID { get; set; }
    private string Description { get; set; }
    private string Status { get; set; }
    private string Result { get; set; }
}

public class ConfirmationEmail
{
    public int EmailID { get; set; }
    public string RecipientEmail { get; set; }
    public string Message { get; set; }
}

public class Account
{
    private int AccountID { get; set; }
    private string Email { get; set; } 
    private string Password { get; set; }
}
}
